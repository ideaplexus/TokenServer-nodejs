{"version":3,"sources":["utils/store.js","utils/snackbar-wrapper.jsx","utils/loading.jsx","utils/container.jsx","utils/use-router.jsx","pages/index/index-card.jsx","rtc-client.js","pages/index/settings-card.jsx","utils/use-devices.jsx","pages/index/card.jsx","pages/index.jsx","pages/meeting/stream-player.jsx","pages/meeting.jsx","utils/use-stream.jsx","App.jsx","serviceWorker.js","utils/theme.js","index.js"],"names":["defaultState","loading","streams","localStream","currentStream","otherStreams","devicesList","config","uid","host","channelName","token","process","resolution","JSON","parse","window","sessionStorage","getItem","err","readDefaultState","microphoneId","cameraId","agoraClient","mode","codec","muteVideo","muteAudio","screen","profile","reducer","state","action","type","payload","client","newCurrentStream","filter","it","getId","newStream","length","newStreams","stream","targetId","forEach","isPlaying","stop","close","Error","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","customSnackbar","minWidth","minHeight","background","boxShadow","borderRadius","justifyContent","padding","SnackbarWrapper","props","classes","mutationCtx","useGlobalMutation","variant","onClose","other","Icon","useEffect","timer","setTimeout","removeTop","clearTimeout","SnackbarContent","className","clsx","aria-describedby","id","IconButton","key","aria-label","color","onClick","CustomizedSnackbar","handleClose","evt","toasts","map","item","index","Snackbar","open","anchorOrigin","vertical","horizontal","useStyles","progress","margin","container","height","width","CircularLoading","CircularProgress","StateContext","createContext","MutationContext","ContainerProvider","children","useReducer","dispatch","rootState","useState","updateToasts","methods","startLoading","stopLoading","updateConfig","params","setClient","clientInstance","setCodec","param","setVideo","setAudio","setScreen","setProfile","toastSuccess","toastInfo","toastError","items","e","idx","setLocalStream","setCurrentStream","setDevicesList","clearAllStream","addLocal","addStream","removeStream","removeStreamById","connectionStateChanged","curState","setItem","stringify","Provider","value","useGlobalState","useContext","RouterContext","React","BrowserRouterHook","routeProps","useRouter","CustomRadio","withStyles","root","checked","readOnly","Box","flex","fontStyle","midItem","marginTop","marginBottom","coverLeft","flexDirection","coverContent","card","maxHeight","input","maxWidth","alignSelf","grid","button","lineHeight","textTransform","radio","paddingRight","IndexCard","routerCtx","stateCtx","handleChange","console","log","to","AgoraRTC","VERSION","href","FormControl","InputLabel","htmlFor","Input","name","onChange","test","target","Button","history","push","pathname","checkSystemRequirements","RTCClient","this","_client","_joined","_localStream","_params","_uid","_eventBus","EventEmitter","_showProfile","_subscribed","_created","data","createClient","callback","indexOf","on","role","setClientRole","Promise","resolve","reject","unpublish","closeStream","rtcStream","createStream","streamID","audio","video","setVideoProfile","init","emit","screenSharingStream","setScreenProfile","publish","subscribe","_tmpStream","_createTmpStream","then","getDevices","devices","setStreamFallbackOption","enableDualStream","streamType","setRemoteVideoStreamType","join","channel","createRTCStream","catch","leave","destroy","menuTitle","textAlign","position","top","menu","line","borderBottom","hr","switchItem","marginLeft","CustomSwitch","switchBase","transform","common","white","border","thumb","track","grey","transition","transitions","create","focusVisible","Switch","focusVisibleClassName","SettingsCard","useMemo","kind","deviceId","label","cameraList","microphoneList","useDevices","Select","inputProps","MenuItem","FormControlLabel","control","coverRight","CardPage","Card","fontWeight","exact","path","component","boxSizing","Index","Container","StreamPlayer","domId","resume","changeResume","autoplay","changeAutoplay","accessDelay","fps","setState","analytics","setInterval","getStats","stats","local","videoSendResolutionWidth","videoReceiveResolutionWidth","videoSendResolutionHeight","videoReceiveResolutionHeight","videoSendFrameRate","videoReceiveFrameRate","clearInterval","lockPlay","useRef","current","play","fit","errState","status","onDoubleClick","stopPropagation","showProfile","showUid","customBtn","backgroundSize","cursor","leftAlign","rightAlign","menuContainer","zIndex","memo","localClient","otherStream","useStream","setMuteVideo","setMuteAudio","URLSearchParams","location","search","roleParams","get","handleClick","unmuteVideo","unmuteAudio","createScreenSharingStream","handleDoubleClick","Tooltip","title","App","Meeting","Boolean","hostname","match","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","overrides","MuiFormControl","MuiInput","underline","ReactDOM","render","ThemeProvider","THEME","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf14963f.chunk.js","sourcesContent":["const readDefaultState = () => {\n  try {\n    return JSON.parse(window.sessionStorage.getItem('custom_storage'))\n  } catch (err) {\n    return {}\n  }\n}\n\nconst defaultState = {\n  // loading effect\n  loading: false,\n  // media devices\n  streams: [],\n  localStream: null,\n  currentStream: null,\n  otherStreams: [],\n  devicesList: [],\n  // web sdk params\n  config: {\n    uid: 0,\n    host: true,\n    channelName: '',\n    token: process.env.REACT_APP_AGORA_APP_TOKEN,\n    resolution: '480p',\n    ...readDefaultState(),\n    microphoneId: '',\n    cameraId: ''\n  },\n  agoraClient: null,\n  mode: 'live',\n  codec: 'vp8',\n  muteVideo: true,\n  muteAudio: true,\n  screen: false,\n  profile: false\n  // beauty: false\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'config': {\n      return { ...state, config: action.payload }\n    }\n    case 'client': {\n      return { ...state, client: action.payload }\n    }\n    case 'loading': {\n      return { ...state, loading: action.payload }\n    }\n    case 'codec': {\n      return { ...state, codec: action.payload }\n    }\n    case 'video': {\n      return { ...state, muteVideo: action.payload }\n    }\n    case 'audio': {\n      return { ...state, muteAudio: action.payload }\n    }\n    case 'screen': {\n      return { ...state, screen: action.payload }\n    }\n    case 'devicesList': {\n      return { ...state, devicesList: action.payload }\n    }\n    case 'localStream': {\n      return { ...state, localStream: action.payload }\n    }\n    case 'profile': {\n      return { ...state, profile: action.payload }\n    }\n    case 'currentStream': {\n      const { streams } = state\n      const newCurrentStream = action.payload\n      const otherStreams = streams.filter(\n        (it) => it.getId() !== newCurrentStream.getId()\n      )\n      return { ...state, currentStream: newCurrentStream, otherStreams }\n    }\n    case 'addStream': {\n      const { streams, currentStream } = state\n      const newStream = action.payload\n      let newCurrentStream = currentStream\n      if (!newCurrentStream) {\n        newCurrentStream = newStream\n      }\n      if (streams.length === 4) return { ...state }\n      const newStreams = [...streams, newStream]\n      const otherStreams = newStreams.filter(\n        (it) => it.getId() !== newCurrentStream.getId()\n      )\n      return {\n        ...state,\n        streams: newStreams,\n        currentStream: newCurrentStream,\n        otherStreams\n      }\n    }\n    case 'removeStream': {\n      const { streams, currentStream } = state\n      const { stream, uid } = action\n      const targetId = stream ? stream.getId() : uid\n      let newCurrentStream = currentStream\n      const newStreams = streams.filter(\n        (stream) => stream.getId() !== targetId\n      )\n      if (currentStream && (targetId === currentStream.getId())) {\n        if (newStreams.length === 0) {\n          newCurrentStream = null\n        } else {\n          newCurrentStream = newStreams[0]\n        }\n      }\n      const otherStreams = newCurrentStream\n        ? newStreams.filter((it) => it.getId() !== newCurrentStream.getId())\n        : []\n      return {\n        ...state,\n        streams: newStreams,\n        currentStream: newCurrentStream,\n        otherStreams\n      }\n    }\n    case 'clearAllStream': {\n      // const {streams, localStream, currentStream, beauty} = state;\n      const { streams, localStream, currentStream } = state\n      streams.forEach((stream) => {\n        if (stream.isPlaying()) {\n          stream.stop()\n        }\n        // stream.close();\n      })\n\n      if (localStream) {\n        localStream.isPlaying() && localStream.stop()\n        localStream.close()\n      }\n      if (currentStream) {\n        currentStream.isPlaying() && currentStream.stop()\n        currentStream.close()\n      }\n      return { ...state, currentStream: null, localStream: null, streams: [] }\n    }\n    // case 'enableBeauty': {\n    //   return {\n    //     ...state,\n    //     beauty: action.enable\n    //   }\n    // }\n    default:\n      throw new Error('mutation type not defined')\n  }\n}\n\nexport { reducer, defaultState }\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { amber, green } from '@material-ui/core/colors'\nimport IconButton from '@material-ui/core/IconButton'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useGlobalMutation } from '../utils/container'\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n}\n\nconst useStyles1 = makeStyles((theme) => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  customSnackbar: {\n    minWidth: '180px !important',\n    minHeight: '40px !important',\n    background: 'rgba(0,0,0,0.7)',\n    boxShadow: '0px 2px 4px 0px rgba(42,62,84,0.24)',\n    borderRadius: '30px',\n    justifyContent: 'center',\n    padding: '0 11px'\n  }\n}))\n\nSnackbarWrapper.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n}\n\nfunction SnackbarWrapper (props) {\n  const classes = useStyles1()\n  const mutationCtx = useGlobalMutation()\n  const { message, onClose, variant, ...other } = props\n  const Icon = variantIcon[variant]\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      mutationCtx.removeTop()\n    }, 1000)\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [mutationCtx])\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], classes.customSnackbar)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          {variant === 'error' ? (\n            <i className=\"error-icon\" />\n          ) : (\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          )}\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={() => {\n            mutationCtx.removeTop()\n          }}\n        >\n          <CloseIcon className={clsx(classes.icon)} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  )\n}\n\nexport default function CustomizedSnackbar (props) {\n  const handleClose = (evt) => {}\n  return (\n    <>\n      {props.toasts.map((item, index) => (\n        <Snackbar\n          key={index}\n          open={true}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n          // onClose={handleClose}\n        >\n          <SnackbarWrapper\n            onClose={handleClose}\n            variant={item.variant}\n            message={`${item.message}`}\n          />\n        </Snackbar>\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: theme.spacing(2),\n    color: '#44A2FC'\n  },\n  container: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#666666'\n  }\n}))\n\nexport default function CircularLoading () {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.container}>\n      <CircularProgress className={classes.progress} />\n    </div>\n  )\n}\n","import React, {\n  createContext,\n  useContext,\n  useReducer,\n  useState,\n  useEffect\n} from 'react'\nimport { reducer, defaultState } from './store'\nimport CustomizedSnackbar from '../utils/snackbar-wrapper'\nimport Loading from '../utils/loading'\n\nconst StateContext = createContext({})\nconst MutationContext = createContext({})\n\nexport const ContainerProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, defaultState)\n\n  window.rootState = state\n\n  const [toasts, updateToasts] = useState([])\n\n  const methods = {\n    startLoading () {\n      dispatch({ type: 'loading', payload: true })\n    },\n    stopLoading () {\n      dispatch({ type: 'loading', payload: false })\n    },\n    updateConfig (params) {\n      dispatch({ type: 'config', payload: { ...state.config, ...params } })\n    },\n    setClient (clientInstance) {\n      dispatch({ type: 'client', payload: clientInstance })\n    },\n    setCodec (param) {\n      dispatch({ type: 'codec', payload: param })\n    },\n    setVideo (param) {\n      dispatch({ type: 'video', payload: param })\n    },\n    setAudio (param) {\n      dispatch({ type: 'audio', payload: param })\n    },\n    setScreen (param) {\n      dispatch({ type: 'screen', payload: param })\n    },\n    setProfile (param) {\n      dispatch({ type: 'profile', payload: param })\n    },\n    toastSuccess (message) {\n      updateToasts([\n        ...toasts,\n        {\n          variant: 'success',\n          message\n        }\n      ])\n    },\n    toastInfo (message) {\n      updateToasts([\n        ...toasts,\n        {\n          variant: 'info',\n          message\n        }\n      ])\n    },\n    toastError (message) {\n      updateToasts([\n        ...toasts,\n        {\n          variant: 'error',\n          message\n        }\n      ])\n    },\n    removeTop () {\n      const items = toasts.filter((e, idx) => idx > 0)\n      updateToasts([...items])\n    },\n    setLocalStream (param) {\n      dispatch({ type: 'localStream', payload: param })\n    },\n    setCurrentStream (param) {\n      dispatch({ type: 'currentStream', payload: param })\n    },\n    setDevicesList (param) {\n      dispatch({ type: 'devicesList', payload: param })\n    },\n    clearAllStream () {\n      dispatch({ type: 'clearAllStream' })\n    },\n    addLocal (evt) {\n      const { stream } = evt\n      methods.setLocalStream(stream)\n      methods.setCurrentStream(stream)\n    },\n    addStream (evt) {\n      const { stream } = evt\n      dispatch({ type: 'addStream', payload: stream })\n    },\n    removeStream (evt) {\n      const { stream } = evt\n      dispatch({ type: 'removeStream', stream: stream })\n    },\n    removeStreamById (evt) {\n      const { uid } = evt\n      dispatch({ type: 'removeStream', uid: uid })\n    },\n    connectionStateChanged (evt) {\n      methods.toastInfo(`${evt.curState}`)\n    },\n    // enableBeauty(enable) {\n    //   dispatch({type: 'enableBeauty', enable});\n    // }\n  }\n\n  useEffect(() => {\n    window.sessionStorage.setItem(\n      'custom_storage',\n      JSON.stringify({\n        uid: state.config.uid,\n        host: state.config.host,\n        channelName: state.config.channelName,\n        token: state.config.token,\n        resolution: state.config.resolution\n      })\n    )\n  }, [state])\n\n  return (\n    <StateContext.Provider value={state}>\n      <MutationContext.Provider value={methods}>\n        <CustomizedSnackbar toasts={toasts} />\n        {state.loading ? <Loading /> : null}\n        {children}\n      </MutationContext.Provider>\n    </StateContext.Provider>\n  )\n}\n\nexport function useGlobalState () {\n  return useContext(StateContext)\n}\n\nexport function useGlobalMutation () {\n  return useContext(MutationContext)\n}\n","import React, { useContext } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nexport const RouterContext = React.createContext({})\n\nexport const BrowserRouterHook = ({ children }) => (\n  <Router>\n    <Switch>\n      <Route>\n        {(routeProps) => (\n          <RouterContext.Provider value={routeProps}>\n            {children}\n          </RouterContext.Provider>\n        )}\n      </Route>\n    </Switch>\n  </Router>\n)\n\nexport default function useRouter () {\n  return useContext(RouterContext)\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport { useGlobalState, useGlobalMutation } from '../../utils/container'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Input from '@material-ui/core/Input'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport useRouter from '../../utils/use-router'\nimport { Link } from 'react-router-dom'\nimport AgoraRTC from 'agora-rtc-sdk'\n\nconst CustomRadio = withStyles({\n  root: {\n    color: '#999999',\n    '&$checked': {\n      color: '#44A2FC'\n    },\n    '&:hover': {\n      backgroundColor: 'inherit'\n    }\n  }\n})(({ children, ...props }) => {\n  return (\n    <div className={`role-item ${props.checked ? 'active' : 'inactive'}`} onClick={(evt) => {\n      props.onClick(props)\n    }}>\n      <div className={`icon-${props.value}`}></div>\n      <div className={`radio-row ${props.value}`}>\n        <div className=\"custom-radio\">\n          <input\n            readOnly\n            type=\"radio\"\n            value={props.value}\n            checked={props.checked}\n          />\n          <div className=\"checkmark\"></div>\n        </div>\n        <Box\n          flex=\"1\"\n          className={`role-name ${props.checked ? 'active' : 'inactive'}`}\n        >\n          {props.value}\n        </Box>\n      </div>\n    </div>\n  )\n})\n\nconst useStyles = makeStyles((theme) => ({\n  fontStyle: {\n    color: '#9ee2ff'\n  },\n  midItem: {\n    marginTop: '1rem',\n    marginBottom: '6rem'\n  },\n  item: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  coverLeft: {\n    background: 'linear-gradient(to bottom, #307AFF, 50%, #46cdff)',\n    alignItems: 'center',\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  coverContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    color: '#fff'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  card: {\n    display: 'flex',\n    minWidth: 700,\n    minHeight: 500,\n    maxHeight: 500,\n    borderRadius: '10px',\n    boxShadow: '0px 6px 18px 0px rgba(0,0,0,0.2)'\n  },\n  input: {\n    maxWidth: '250px',\n    minWidth: '250px',\n    alignSelf: 'center'\n  },\n  grid: {\n    margin: '0 !important'\n  },\n  button: {\n    lineHeight: '21px',\n    color: 'rgba(255,255,255,1)',\n    fontSize: '17px',\n    textTransform: 'none',\n    height: '44px',\n    width: '260px',\n    '&:hover': {\n      backgroundColor: '#82C2FF'\n    },\n    margin: theme.spacing(1),\n    marginTop: '33px',\n    backgroundColor: '#44a2fc',\n    borderRadius: '30px'\n  },\n  radio: {\n    padding: '0',\n    fontSize: '14px',\n    // display: 'flex',\n    alignItems: 'center',\n    paddingRight: '5px'\n  }\n}))\n\nexport default function IndexCard () {\n  const classes = useStyles()\n\n  const routerCtx = useRouter()\n  const stateCtx = useGlobalState()\n  const mutationCtx = useGlobalMutation()\n\n  const handleClick = () => {\n    if (!stateCtx.config.channelName) {\n      mutationCtx.toastError('You need enter the topic')\n      return\n    }\n\n    mutationCtx.startLoading()\n    routerCtx.history.push({\n      pathname: `/meeting/${stateCtx.config.channelName}`\n    })\n  }\n\n  const handleChange = (evt) => {\n    const { value, checked } = evt\n    console.log('value', evt)\n    mutationCtx.updateConfig({\n      host: value === 'host'\n    })\n  }\n\n  return (\n    <Box\n      marginTop=\"114px\"\n      flex=\"1\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"flex-start\"\n      flexDirection=\"column\"\n    >\n      <Link to=\"/setting\" className=\"setting-btn\" />\n      <span className=\"version\">Web SDK Version: {AgoraRTC.VERSION}</span>\n      <a\n        href=\"https://github.com/AgoraIO/Basic-Video-Broadcasting/tree/master/OpenLive-Web\"\n        className=\"github\"\n      ></a>\n      <div className=\"role-container\">\n        <CustomRadio\n          className={classes.radio}\n          value=\"host\"\n          checked={stateCtx.config.host}\n          onClick={handleChange}\n        ></CustomRadio>\n        <CustomRadio\n          className={classes.radio}\n          value=\"audience\"\n          checked={!stateCtx.config.host}\n          onClick={handleChange}\n        ></CustomRadio>\n      </div>\n      <Box\n        marginTop=\"92\"\n        flex=\"1\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n      >\n        <FormControl className={clsx(classes.input, classes.grid)}>\n          <InputLabel htmlFor=\"channelName\">Pick a topic to chat</InputLabel>\n          <Input\n            id=\"channelName\"\n            name=\"channelName\"\n            value={stateCtx.config.channelName}\n            onChange={(evt) => {\n              const PATTERN = /^[a-zA-Z0-9!#$%&()+\\-:;<=.>?@[\\]^_{}|~,\\s]{1,64}$/\n              const value = PATTERN.test(evt.target.value)\n              if (value && evt.target.value.length < 64) {\n                mutationCtx.updateConfig({ channelName: evt.target.value })\n              } else {\n                mutationCtx.updateConfig({ channelName: '' })\n              }\n            }}\n          />\n        </FormControl>\n        <FormControl className={classes.grid}>\n          <Button\n            onClick={handleClick}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Start Live Broadcast\n          </Button>\n        </FormControl>\n      </Box>\n    </Box>\n  )\n}\n","import AgoraRTC from 'agora-rtc-sdk'\nimport EventEmitter from 'events'\nconst appID = process.env.REACT_APP_AGORA_APP_ID\nconsole.log(\n  'agora sdk version: ' +\n    AgoraRTC.VERSION +\n    ' compatible: ' +\n    AgoraRTC.checkSystemRequirements()\n)\nexport default class RTCClient {\n  constructor () {\n    this._client = null\n    this._joined = false\n    this._localStream = null\n    // this._enableBeauty = false;\n    this._params = {}\n    this._uid = 0\n    this._eventBus = new EventEmitter()\n    this._showProfile = false\n    this._subscribed = false\n    this._created = false\n  }\n\n  createClient (data) {\n    this._client = AgoraRTC.createClient({\n      mode: data.mode,\n      codec: data.codec\n    })\n    return this._client\n  }\n\n  closeStream () {\n    if (this._localStream.isPlaying()) {\n      this._localStream.stop()\n    }\n    this._localStream.close()\n  }\n\n  destroy () {\n    this._created = false\n    this._client = null\n  }\n\n  on (evt, callback) {\n    const customEvents = ['localStream-added', 'screenShare-canceled']\n\n    if (customEvents.indexOf(evt) !== -1) {\n      this._eventBus.on(evt, callback)\n      return\n    }\n\n    this._client.on(evt, callback)\n  }\n\n  setClientRole (role) {\n    this._client.setClientRole(role)\n  }\n\n  createRTCStream (data) {\n    return new Promise((resolve, reject) => {\n      this._uid = this._localStream ? this._localStream.getId() : data.uid\n      if (this._localStream) {\n        this.unpublish()\n        this.closeStream()\n      }\n      // create rtc stream\n      const rtcStream = AgoraRTC.createStream({\n        streamID: this._uid,\n        audio: true,\n        video: true,\n        screen: false,\n        microphoneId: data.microphoneId,\n        cameraId: data.cameraId\n      })\n\n      if (data.resolution && data.resolution !== 'default') {\n        rtcStream.setVideoProfile(data.resolution)\n      }\n\n      // init local stream\n      rtcStream.init(\n        () => {\n          this._localStream = rtcStream\n          this._eventBus.emit('localStream-added', {\n            stream: this._localStream\n          })\n          if (data.muteVideo === false) {\n            this._localStream.muteVideo()\n          }\n          if (data.muteAudio === false) {\n            this._localStream.muteAudio()\n          }\n          // if (data.beauty === true) {\n          //   this._localStream.setBeautyEffectOptions(true, {\n          //     lighteningContrastLevel: 1,\n          //     lighteningLevel: 0.7,\n          //     smoothnessLevel: 0.5,\n          //     rednessLevel: 0.1\n          //   })\n          //   this._enableBeauty = true;\n          // }\n          resolve()\n        },\n        (err) => {\n          reject(err)\n          // Toast.error(\"stream init failed, please open console see more detail\");\n          console.error('init local stream failed ', err)\n        }\n      )\n    })\n  }\n\n  createScreenSharingStream (data) {\n    return new Promise((resolve, reject) => {\n      // create screen sharing stream\n      this._uid = this._localStream ? this._localStream.getId() : data.uid\n      if (this._localStream) {\n        this._uid = this._localStream.getId()\n        this.unpublish()\n      }\n      const screenSharingStream = AgoraRTC.createStream({\n        streamID: this._uid,\n        audio: true,\n        video: false,\n        screen: true,\n        microphoneId: data.microphoneId,\n        cameraId: data.cameraId\n      })\n\n      if (data.resolution && data.resolution !== 'default') {\n        screenSharingStream.setScreenProfile(`${data.resolution}_1`)\n      }\n\n      screenSharingStream.on('stopScreenSharing', (evt) => {\n        this._eventBus.emit('stopScreenSharing', evt)\n        this.closeStream()\n        this.unpublish()\n      })\n\n      // init local stream\n      screenSharingStream.init(\n        () => {\n          this.closeStream()\n          this._localStream = screenSharingStream\n\n          // run callback\n          this._eventBus.emit('localStream-added', {\n            stream: this._localStream\n          })\n          resolve()\n        },\n        (err) => {\n          this.publish()\n          reject(err)\n        }\n      )\n    })\n  }\n\n  subscribe (stream, callback) {\n    this._client.subscribe(stream, callback)\n  }\n\n  _createTmpStream () {\n    this._uid = 0\n    return new Promise((resolve, reject) => {\n      if (this._localStream) {\n        this._localStream.close()\n      }\n      // create rtc stream\n      const _tmpStream = AgoraRTC.createStream({\n        streamID: this._uid,\n        audio: true,\n        video: true,\n        screen: false\n      })\n\n      // init local stream\n      _tmpStream.init(\n        () => {\n          this._localStream = _tmpStream\n          resolve()\n        },\n        (err) => {\n          reject(err)\n          // Toast.error(\"stream init failed, please open console see more detail\");\n          console.error('init local stream failed ', err)\n        }\n      )\n    })\n  }\n\n  getDevices () {\n    return new Promise((resolve, reject) => {\n      if (!this._client) {\n        this.createClient({ codec: 'vp8', mode: 'live' })\n      }\n      this._createTmpStream().then(() => {\n        AgoraRTC.getDevices((devices) => {\n          this._localStream.close()\n          resolve(devices)\n        })\n      })\n    })\n  }\n\n  setStreamFallbackOption (stream, type) {\n    this._client.setStreamFallbackOption(stream, type)\n  }\n\n  enableDualStream () {\n    return new Promise((resolve, reject) => {\n      this._client.enableDualStream(resolve, reject)\n    })\n  }\n\n  setRemoteVideoStreamType (stream, streamType) {\n    this._client.setRemoteVideoStreamType(stream, streamType)\n  }\n\n  join (data) {\n    this._joined = 'pending'\n    return new Promise((resolve, reject) => {\n      /**\n       * A class defining the properties of the config parameter in the createClient method.\n       * Note:\n       *    Ensure that you do not leave mode and codec as empty.\n       *    Ensure that you set these properties before calling Client.join.\n       *  You could find more detail here. https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.clientconfig.html\n       **/\n\n      this._params = data\n\n      // handle AgoraRTC client event\n      // this.handleEvents();\n\n      // init client\n      this._client.init(\n        appID,\n        () => {\n          /**\n           * Joins an AgoraRTC Channel\n           * This method joins an AgoraRTC channel.\n           * Parameters\n           * tokenOrKey: string | null\n           *    Low security requirements: Pass null as the parameter value.\n           *    High security requirements: Pass the string of the Token or Channel Key as the parameter value. See Use Security Keys for details.\n           *  channel: string\n           *    A string that provides a unique channel name for the Agora session. The length must be within 64 bytes. Supported character scopes:\n           *    26 lowercase English letters a-z\n           *    26 uppercase English letters A-Z\n           *    10 numbers 0-9\n           *    Space\n           *    \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \"{\", \"}\", \"|\", \"~\", \",\"\n           *  uid: number | null\n           *    The user ID, an integer. Ensure this ID is unique. If you set the uid to null, the server assigns one and returns it in the onSuccess callback.\n           *   Note:\n           *      All users in the same channel should have the same type (number) of uid.\n           *      If you use a number as the user ID, it should be a 32-bit unsigned integer with a value ranging from 0 to (232-1).\n           **/\n          this._client.join(\n            data.token ? data.token : null,\n            data.channel,\n            data.uid ? +data.uid : null,\n            (uid) => {\n              this._uid = uid\n              // Toast.notice(\"join channel: \" + data.channel + \" success, uid: \" + uid);\n              console.log(\n                'join channel: ' + data.channel + ' success, uid: ' + uid\n              )\n              this._joined = true\n\n              data.uid = uid\n\n              if (data.host) {\n                this.createRTCStream(data)\n                  .then(() => {\n                    this.enableDualStream()\n                      .then(() => {\n                        this.setRemoteVideoStreamType(this._localStream, 0)\n                        resolve(data.uid)\n                      })\n                      .catch((err) => {\n                        reject(err)\n                      })\n                  })\n                  .catch((err) => {\n                    reject(err)\n                  })\n              } else {\n                resolve()\n              }\n            },\n            (err) => {\n              this._joined = false\n              reject(err)\n              console.error('client join failed', err)\n            }\n          )\n        },\n        (err) => {\n          this._joined = false\n          reject(err)\n          console.error(err)\n        }\n      )\n    })\n  }\n\n  publish () {\n    // publish localStream\n    this._client.publish(this._localStream, (err) => {\n      console.error(err)\n    })\n  }\n\n  unpublish () {\n    if (!this._client) {\n      return\n    }\n    this._client.unpublish(this._localStream, (err) => {\n      console.error(err)\n    })\n  }\n\n  leave () {\n    return new Promise((resolve) => {\n      if (!this._client) return resolve()\n      // leave channel\n      this._client.leave(\n        () => {\n          this._joined = false\n          this.destroy()\n          // if (this._localStream && this._enableBeauty) {\n          //   this._localStream.setBeautyEffectOptions(false);\n          // }\n          resolve()\n        },\n        (err) => {\n          console.log('channel leave failed')\n          console.error(err)\n        }\n      )\n    })\n  }\n}\n","import React from 'react'\nimport { useGlobalState, useGlobalMutation } from '../../utils/container'\nimport useDevices from '../../utils/use-devices'\nimport PropTypes from 'prop-types'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Box from '@material-ui/core/Box'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Switch from '@material-ui/core/Switch'\nimport { Link } from 'react-router-dom'\n\nSettingsCard.propTypes = {\n  name: PropTypes.string,\n  resolution: PropTypes.string,\n  cameraDevice: PropTypes.string,\n  microphoneDevice: PropTypes.string,\n  video: PropTypes.bool,\n  audio: PropTypes.bool\n}\n\nconst useStyles = makeStyles((theme) => ({\n  menuTitle: {\n    color: '#333333',\n    textAlign: 'center',\n    fontSize: 'h6.fontSize',\n    position: 'relative',\n    top: '7px'\n  },\n  marginTop: {\n    marginTop: '0 !important'\n  },\n  menu: {\n    margin: '0.25rem 0',\n    position: 'relative',\n    height: '39px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  line: {\n    marginTop: '0.2rem',\n    marginBottom: '0.5rem',\n    borderBottom: '1px solid #EAEAEA'\n  },\n  hr: {\n    borderBottom: '1px solid #EAEAEA'\n  },\n  switchItem: {\n    flexDirection: 'row-reverse !important',\n    marginLeft: '0 !important',\n    marginRight: '0 !important',\n    justifyContent: 'space-between'\n  }\n}))\n\nconst CustomSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 2,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#44A2FC',\n        opacity: 1,\n        border: 'none'\n      }\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff'\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border'])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked\n      }}\n      {...props}\n    />\n  )\n})\n\nexport default function SettingsCard () {\n  const classes = useStyles()\n\n  const stateCtx = useGlobalState()\n\n  const mutationCtx = useGlobalMutation()\n\n  const [cameraList, microphoneList] = useDevices()\n\n  return (\n    <Box flex=\"1\" display=\"flex\" flexDirection=\"column\">\n      <Link to=\"/\" className=\"back-btn\" />\n      <Box\n        display=\"flex\"\n        flex=\"1\"\n        flexDirection=\"column\"\n        padding=\"0 1rem\"\n        justifyContent=\"flex-start\"\n      >\n        <FormControl className={classes.menu}>\n          <span className={classes.menuTitle}>Setting</span>\n        </FormControl>\n        <div className={classes.line}></div>\n        <FormControl>\n          <InputLabel htmlFor=\"resolution\">Resolution</InputLabel>\n          <Select\n            value={stateCtx.config.resolution}\n            onChange={(evt) => {\n              mutationCtx.updateConfig({\n                resolution: evt.target.value\n              })\n            }}\n            inputProps={{\n              name: 'resolution',\n              id: 'resolution'\n            }}\n          >\n            <MenuItem value={'480p'}>480p</MenuItem>\n            <MenuItem value={'720p'}>720p</MenuItem>\n            <MenuItem value={'1080p'}>1080p</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor=\"codec\">Video Codec</InputLabel>\n          <Select\n            value={stateCtx.codec}\n            onChange={(evt) => {\n              mutationCtx.setCodec(evt.target.value)\n            }}\n            inputProps={{\n              name: 'codec',\n              id: 'codec'\n            }}\n          >\n            <MenuItem value={'h264'}>h264</MenuItem>\n            <MenuItem value={'vp8'}>vp8</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor=\"camera\">Camera</InputLabel>\n          <Select\n            value={stateCtx.config.cameraId}\n            onChange={(evt) => {\n              mutationCtx.updateConfig({\n                cameraId: evt.target.value\n              })\n            }}\n            inputProps={{\n              name: 'camera',\n              id: 'camera'\n            }}\n          >\n            {cameraList.map((item, key) => (\n              <MenuItem key={key} value={item.value}>\n                {item.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor=\"Microphone\">Microphone</InputLabel>\n          <Select\n            value={stateCtx.config.microphoneId}\n            onChange={(evt) => {\n              mutationCtx.updateConfig({\n                microphoneId: evt.target.value\n              })\n            }}\n            inputProps={{\n              name: 'microphone',\n              id: 'microphone'\n            }}\n          >\n            {microphoneList.map((item, key) => (\n              <MenuItem key={key} value={item.value}>\n                {item.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <FormControlLabel\n            control={\n              <CustomSwitch\n                checked={stateCtx.muteVideo}\n                onChange={() => {\n                  mutationCtx.setVideo(!stateCtx.muteVideo)\n                }}\n                value={stateCtx.muteVideo}\n                color=\"primary\"\n              />\n            }\n            className={classes.switchItem}\n            label=\"Video\"\n          />\n          <div className={classes.hr}></div>\n        </FormControl>\n        <FormControl>\n          <FormControlLabel\n            control={\n              <CustomSwitch\n                checked={stateCtx.muteAudio}\n                onChange={() => {\n                  mutationCtx.setAudio(!stateCtx.muteAudio)\n                }}\n                value={stateCtx.muteAudio}\n                color=\"primary\"\n              />\n            }\n            className={classes.switchItem}\n            label=\"Audio\"\n          />\n          <div className={classes.hr}></div>\n        </FormControl>\n        <FormControl>\n          <FormControlLabel\n            control={\n              <CustomSwitch\n                checked={stateCtx.profile}\n                onChange={() => {\n                  mutationCtx.setProfile(!stateCtx.profile)\n                }}\n                value={stateCtx.profile}\n                color=\"primary\"\n              />\n            }\n            className={classes.switchItem}\n            label=\"Profile\"\n          />\n          <div className={classes.hr}></div>\n        </FormControl>\n        {/* <FormControl>\n        <FormControlLabel\n          control={\n            <CustomSwitch\n              checked={stateCtx.beauty}\n              onChange={() => {\n                mutationCtx.enableBeauty(!stateCtx.beauty)\n              }}\n              color=\"primary\"\n            />\n          }\n          className={classes.switchItem}\n          label=\"Beauty\"\n        />\n        <div className={classes.hr}></div>\n      </FormControl> */}\n      </Box>\n    </Box>\n  )\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useGlobalState, useGlobalMutation } from '../utils/container'\nimport RTCClient from '../rtc-client'\n\nexport default function useDevices () {\n  const stateCtx = useGlobalState()\n  const mutationCtx = useGlobalMutation()\n\n  const client = useMemo(() => {\n    const _rtcClient = new RTCClient()\n    return _rtcClient\n  }, [])\n\n  const [cameraList, microphoneList] = useMemo(() => {\n    return [\n      stateCtx.devicesList\n        .filter((item) => item.kind === 'videoinput')\n        .map((item, idx) => ({\n          value: item.deviceId,\n          label: item.label ? item.label : `Video Input ${idx}`\n        })),\n      stateCtx.devicesList\n        .filter((item) => item.kind === 'audioinput')\n        .map((item, idx) => ({\n          value: item.deviceId,\n          label: item.label ? item.label : `Audio Input ${idx}`\n        }))\n    ]\n  }, [stateCtx.devicesList])\n\n  useEffect(() => {\n    if (cameraList.length > 0 || microphoneList.length > 0) return\n    client.getDevices().then((devices) => {\n      mutationCtx.setDevicesList(devices)\n    })\n    return () => {\n      client.destroy()\n    }\n  }, [microphoneList, mutationCtx, cameraList, client])\n\n  useEffect(() => {\n    if (\n      cameraList[0] &&\n      microphoneList[0] &&\n      (!stateCtx.config.cameraId || !stateCtx.config.microphoneId)\n    ) {\n      mutationCtx.updateConfig({\n        cameraId: cameraList[0].value,\n        microphoneId: microphoneList[0].value\n      })\n      mutationCtx.stopLoading()\n    }\n  }, [\n    mutationCtx,\n    stateCtx.devicesList,\n    stateCtx.config,\n    cameraList,\n    microphoneList\n  ])\n\n  return [cameraList, microphoneList]\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Card from '@material-ui/core/Card'\nimport IndexCard from './index-card'\nimport SettingsCard from './settings-card'\nconst useStyles = makeStyles(theme => ({\n  fontStyle: {\n    color: '#9ee2ff'\n  },\n  midItem: {\n    marginTop: '1rem',\n    marginBottom: '6rem'\n  },\n  item: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  coverLeft: {\n    background: 'linear-gradient(to bottom, #307AFF, 50%, #46cdff)',\n    alignItems: 'center',\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  coverContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    color: '#fff',\n    position: 'relative'\n  },\n  coverRight: {\n    position: 'relative',\n    flex: 1,\n    display: 'flex'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  card: {\n    display: 'flex',\n    minWidth: 700,\n    minHeight: 500,\n    maxHeight: 500,\n    borderRadius: '10px',\n    boxShadow: '0px 6px 18px 0px rgba(0,0,0,0.2)'\n  },\n  input: {\n    maxWidth: '250px',\n    minWidth: '250px',\n    alignSelf: 'center'\n  },\n  grid: {\n    margin: '0 !important'\n  },\n  button: {\n    height: '44px',\n    width: '260px',\n    '&:hover': {\n      backgroundColor: '#307AFF'\n    },\n    margin: theme.spacing(1),\n    marginTop: '33px',\n    backgroundColor: '#44a2fc',\n    borderRadius: '30px'\n  }\n}))\n\nexport default function CardPage () {\n  const classes = useStyles()\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Card className={classes.card}>\n        <Box display=\"flex\" flex=\"1\">\n          <div className={classes.coverLeft}>\n            <div className={classes.item}>\n              <div className='cover-image' />\n            </div>\n            <div className={classes.item}>\n              <div className={classes.coverContent}>\n                <Box textAlign=\"center\" fontSize=\"h6.fontSize\" className={classes.fontStyle}>Welcome to</Box>\n                <Box textAlign=\"center\" fontWeight=\"fontWeightRegular\" fontSize=\"h4.fontSize\" className={classes.midItem}>OPEN LIVE</Box>\n                {/* <Box textAlign=\"center\" fontWeight=\"fontWeightRegular\" className={classes.fontStyle} style={{color: \"white\", fontSize: \"17px\"}}>Agora Web SDK: {AgoraRTC.VERSION}</Box> */}\n                <Box textAlign=\"center\" fontWeight=\"fontWeightRegular\" className={classes.fontStyle} fontSize=\"h7.fontSize\">Powered by Agora.io</Box>\n              </div>\n            </div>\n          </div>\n          <div className={classes.coverRight}>\n            <Switch>\n              <Route exact path=\"/\" component={IndexCard}></Route>\n              <Route path=\"/setting\" component={SettingsCard}></Route>\n            </Switch>\n          </div>\n        </Box>\n      </Card>\n    </Box>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useGlobalState, useGlobalMutation } from '../utils/container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container } from '@material-ui/core'\nimport IndexCard from './index/card'\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    height: '100%',\n    width: '100%',\n    minWidth: 800,\n    minHeight: 600,\n    boxSizing: 'content-box',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}))\n\nconst Index = () => {\n  const stateCtx = useGlobalState()\n  const mutationCtx = useGlobalMutation()\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (stateCtx.loading === true) {\n      mutationCtx.stopLoading()\n    }\n  }, [stateCtx.loading, mutationCtx])\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <IndexCard />\n    </Container>\n  )\n}\n\nexport default Index\n","import React, { useMemo, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nStreamPlayer.propTypes = {\n  stream: PropTypes.object\n}\n\nexport default function StreamPlayer (props) {\n  const { stream, domId, uid } = props\n\n  const [resume, changeResume] = useState(false)\n\n  const [autoplay, changeAutoplay] = useState(false)\n\n  const handleClick = () => {\n    if (autoplay && !resume) {\n      stream.resume()\n      changeResume(true)\n    }\n  }\n\n  const handleDoubleClick = (evt) => {\n    evt.stopPropagation()\n    props.onDoubleClick(stream)\n  }\n\n  const [state, setState] = useState({\n    accessDelay: 0,\n    fps: 0,\n    resolution: 0\n  })\n\n  const analytics = useMemo(() => state, [state])\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      stream.getStats((stats) => {\n        const width = props.local\n          ? stats.videoSendResolutionWidth\n          : stats.videoReceiveResolutionWidth\n        const height = props.local\n          ? stats.videoSendResolutionHeight\n          : stats.videoReceiveResolutionHeight\n        const fps = props.local\n          ? stats.videoSendFrameRate\n          : stats.videoReceiveFrameRate\n        setState({\n          accessDelay: `${stats.accessDelay ? stats.accessDelay : 0}`,\n          resolution: `${width}x${height}`,\n          fps: `${fps || 0}`\n        })\n      })\n    }, 500)\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [props.local, stream])\n\n  const lockPlay = React.useRef(false)\n\n  useEffect(() => {\n    if (!stream || stream.isPlaying()) return\n    lockPlay.current = true\n    stream.play(domId, { fit: 'cover' }, (errState) => {\n      if (errState && errState.status !== 'aborted') {\n        console.log('stream-player play failed ', domId)\n        changeAutoplay(true)\n      }\n      lockPlay.current = false\n    })\n    return () => {\n      if (stream.isPlaying()) {\n        stream.stop()\n      }\n    }\n  }, [stream, domId])\n\n  return (\n    <div\n      className={`stream-player ${autoplay ? 'autoplay' : ''}`}\n      id={domId}\n      onClick={handleClick}\n      onDoubleClick={handleDoubleClick}\n    >\n      {props.children}\n      {props.showProfile ? (\n        <div className={props.className}>\n          <span>SD-RTN delay: {analytics.accessDelay}ms</span>\n          <span>\n            Video: {analytics.fps}fps {analytics.resolution}\n          </span>\n        </div>\n      ) : null}\n      {props.showUid && uid ? (\n        <div className=\"stream-uid\">UID: {uid}</div>\n      ) : null}\n    </div>\n  )\n}\n","import React, { useEffect, useState, useMemo } from 'react'\nimport clsx from 'clsx'\nimport { useGlobalState, useGlobalMutation } from '../utils/container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useRouter from '../utils/use-router'\nimport useStream from '../utils/use-stream'\nimport RTCClient from '../rtc-client'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport StreamPlayer from './meeting/stream-player'\n\nconst useStyles = makeStyles({\n  menu: {\n    height: '150px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  customBtn: {\n    width: '50px',\n    height: '50px',\n    marginLeft: '20px',\n    borderRadius: '26px',\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    backgroundSize: '50px',\n    cursor: 'pointer'\n  },\n  leftAlign: {\n    display: 'flex',\n    flex: '1',\n    justifyContent: 'space-evenly'\n  },\n  rightAlign: {\n    display: 'flex',\n    flex: '1',\n    justifyContent: 'center'\n  },\n  menuContainer: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    zIndex: '2'\n  }\n})\n\nconst MeetingPage = () => {\n  const classes = useStyles()\n\n  const routerCtx = useRouter()\n  const stateCtx = useGlobalState()\n  const mutationCtx = useGlobalMutation()\n  \n  const localClient = useMemo(() => {\n    const client = new RTCClient()\n    if (!client._created) {\n      client.createClient({ codec: stateCtx.codec, mode: stateCtx.mode })\n      client._created = true\n    }\n    return client\n  }, [stateCtx.codec, stateCtx.mode])\n\n  const [localStream, currentStream] = useStream(localClient)\n  const [muteVideo, setMuteVideo] = useState(stateCtx.muteVideo)\n  const [muteAudio, setMuteAudio] = useState(stateCtx.muteAudio)\n\n  const config = useMemo(() => {\n    return {\n      token: stateCtx.config.token,\n      channel: stateCtx.config.channelName,\n      microphoneId: stateCtx.config.microphoneId,\n      cameraId: stateCtx.config.cameraId,\n      resolution: stateCtx.config.resolution,\n      muteVideo: muteVideo,\n      muteAudio: muteAudio,\n      uid: stateCtx.uid,\n      host: stateCtx.config.host\n      // beauty: stateCtx.beauty\n    }\n  }, [stateCtx, muteVideo, muteAudio])\n\n  useEffect(() => {\n    return () => {\n      localClient && localClient.leave(() => mutationCtx.clearAllStream())\n    }\n  }, [localClient])\n\n  const history = routerCtx.history\n\n  const params = new URLSearchParams(window.location.search)\n\n  useEffect(() => {\n    const roleParams = params.get('role')\n    if (!config.channel && roleParams !== 'audience') {\n      history.push('/')\n    }\n  }, [config.channel, history, params])\n\n  useEffect(() => {\n    if (\n      config.channel &&\n      localClient._created &&\n      localClient._joined === false\n    ) {\n      localClient\n        .join(config)\n        .then((uid) => {\n          if (config.host) {\n            localClient.publish()\n          }\n          mutationCtx.updateConfig({ uid })\n          mutationCtx.stopLoading()\n        })\n        .catch((err) => {\n          mutationCtx.toastError(`Media ${err.info}`)\n          routerCtx.history.push('/')\n        })\n    }\n  }, [localClient, mutationCtx, config, routerCtx])\n\n  const handleClick = (name) => {\n    return (evt) => {\n      evt.stopPropagation()\n      switch (name) {\n        case 'video': {\n          muteVideo\n            ? localStream.muteVideo()\n            : localStream.unmuteVideo()\n          setMuteVideo(!muteVideo)\n          break\n        }\n        case 'audio': {\n          muteAudio\n            ? localStream.muteAudio()\n            : localStream.unmuteAudio()\n          setMuteAudio(!muteAudio)\n          break\n        }\n        case 'screen': {\n          if (stateCtx.screen) {\n            localClient\n              .createRTCStream({\n                token: null,\n                channel: stateCtx.config.channelName,\n                microphoneId: stateCtx.config.microphoneId,\n                resolution: stateCtx.config.resolution,\n                muteVideo: muteVideo,\n                muteAudio: muteAudio\n                // beauty: stateCtx.beauty,\n              })\n              .then(() => {\n                localClient.publish()\n                mutationCtx.setScreen(false)\n              })\n              .catch((err) => {\n                console.log(err)\n                mutationCtx.toastError(`Media ${err.info}`)\n                routerCtx.history.push('/')\n              })\n          } else {\n            localClient\n              .createScreenSharingStream({\n                token: null,\n                channel: stateCtx.config.channelName,\n                microphoneId: stateCtx.config.microphoneId,\n                cameraId: stateCtx.config.cameraId,\n                resolution: stateCtx.config.resolution\n              })\n              .then(() => {\n                localClient.publish()\n                mutationCtx.setScreen(true)\n              })\n              .catch((err) => {\n                console.log(err)\n                mutationCtx.toastError(`Media ${err.info}`)\n              })\n          }\n          break\n        }\n        case 'profile': {\n          break\n        }\n        default:\n          throw new Error(`Unknown click handler, name: ${name}`)\n      }\n    }\n  }\n\n  const handleDoubleClick = (stream) => {\n    mutationCtx.setCurrentStream(stream)\n  }\n\n  const otherStreams = useMemo(() => {\n    return stateCtx.streams.filter(\n      (it) => it.getId() !== currentStream.getId()\n    )\n  }, [stateCtx.streams, currentStream])\n\n  return (\n    <div className=\"meeting\">\n      <div className=\"current-view\">\n        <div className=\"nav\">\n          <div className=\"avatar-container\">\n            <div className=\"default-avatar\"></div>\n            <div className=\"avatar-text\">Agora Test</div>\n            <div className=\"like\"></div>\n          </div>\n          <Tooltip title=\"quit\">\n            <div\n              className=\"quit\"\n              onClick={() => {\n                localClient.leave().then(() => {\n                  mutationCtx.clearAllStream()\n                  // mutationCtx.resetState()\n                  routerCtx.history.push('/')\n                })\n              }}\n            ></div>\n          </Tooltip>\n        </div>\n        {currentStream ? (\n          <StreamPlayer\n            className={'main-stream-profile'}\n            showProfile={stateCtx.profile}\n            local={\n              config.host\n                ? currentStream &&\n                  localStream &&\n                  currentStream.getId() === localStream.getId()\n                : false\n            }\n            stream={currentStream}\n            onDoubleClick={handleDoubleClick}\n            uid={currentStream.getId()}\n            domId={`stream-player-${currentStream.getId()}`}\n          >\n            <div className={classes.menuContainer}>\n              {config.host && (\n                <div className={classes.menu}>\n                  <Tooltip title={muteVideo ? 'mute-video' : 'unmute-video'}>\n                    <i\n                      onClick={handleClick('video')}\n                      className={clsx(\n                        classes.customBtn,\n                        muteVideo ? 'mute-video' : 'unmute-video'\n                      )}\n                    />\n                  </Tooltip>\n                  <Tooltip title={muteAudio ? 'mute-audio' : 'unmute-audio'}>\n                    <i\n                      onClick={handleClick('audio')}\n                      className={clsx(\n                        classes.customBtn,\n                        muteAudio ? 'mute-audio' : 'unmute-audio'\n                      )}\n                    />\n                  </Tooltip>\n                  <Tooltip title={stateCtx.screen ? 'stop-screen-share' : 'start-screen-share'}>\n                    <i\n                      onClick={handleClick('screen')}\n                      className={clsx(\n                        classes.customBtn,\n                        stateCtx.screen\n                          ? 'start-screen-share'\n                          : 'stop-screen-share'\n                      )}\n                    />\n                  </Tooltip>\n                  \n                  {/* <i onClick={handleClick('profile')} className={clsx(classes.customBtn, 'show-profile')}/> */}\n                </div>\n              )}\n            </div>\n          </StreamPlayer>\n        ) : null}\n        <div className=\"stream-container\">\n          {stateCtx.otherStreams.map((stream, index) => (\n            <StreamPlayer\n              className={'stream-profile'}\n              showProfile={stateCtx.profile}\n              local={\n                config.host\n                  ? stream.getId() === localStream && localStream.getId()\n                  : false\n              }\n              key={`${index}${stream.getId()}`}\n              stream={stream}\n              isPlaying={stream.isPlaying()}\n              uid={stream.getId()}\n              domId={`stream-player-${stream.getId()}`}\n              onDoubleClick={handleDoubleClick}\n              showUid={true}\n            ></StreamPlayer>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(MeetingPage)\n","import React, { useEffect, useMemo } from 'react'\nimport { useGlobalState, useGlobalMutation } from './container'\n\nexport default function useStream (client) {\n  const stateCtx = useGlobalState()\n  const mutationCtx = useGlobalMutation()\n\n  const [localStream, currentStream] = [\n    stateCtx.localStream,\n    stateCtx.currentStream\n  ]\n\n  const otherStreams = useMemo(\n    () =>\n      stateCtx.streams.filter(\n        (stream) => stream.getId() !== currentStream.getId()\n      ),\n    [stateCtx, currentStream]\n  )\n\n  // const streamList = stateCtx.streams.filter((it) => it.getId() !== currentStream.getId());\n\n  // const [streamList, localStream, currentStream] = useMemo(() => {\n  //   return [stateCtx.streams, stateCtx.localStream, stateCtx.currentStream];\n  // }, [stateCtx]);\n\n  useEffect(() => {\n    const addRemoteStream = (evt) => {\n      const { stream } = evt\n      client.subscribe(stream, (err) => {\n        mutationCtx.toastError(\n          `stream ${evt.stream.getId()} subscribe failed: ${err}`\n        )\n      })\n    }\n    // const canceledScreenSharing = () => {\n    //   if (stateCtx.localStream) {\n    //     stateCtx.localStream.close();\n    //   }\n    //   stateCtx.toastInfo('Screen Sharing Stopped');\n    // }\n    if (client && client._subscribed === false) {\n      // client.on(\"stopScreenSharing\", canceledScreenSharing);\n      client.on('connection-state-change', mutationCtx.connectionStateChanged)\n      client.on('localStream-added', mutationCtx.addLocal)\n      client.on('stream-published', mutationCtx.addStream)\n      client.on('stream-added', addRemoteStream)\n      client.on('stream-removed', mutationCtx.removeStream)\n      // client.on(\"stream-subscribed\", mutationCtx.addStream);\n      client.on('peer-leave', mutationCtx.removeStreamById)\n      client.on('stream-subscribed', (evt) => {\n        client.setStreamFallbackOption(evt.stream, 2)\n        mutationCtx.addStream(evt)\n      })\n      client._subscribed = true\n    }\n  }, [client, mutationCtx])\n\n  useEffect(() => {\n    if (client && client._subscribed === true && currentStream != null) {\n      client.setRemoteVideoStreamType(currentStream, 0)\n      otherStreams.forEach((otherStream) => {\n        client.setRemoteVideoStreamType(otherStream, 1)\n      })\n    }\n  }, [client, currentStream, otherStreams])\n\n  return [localStream, currentStream, otherStreams]\n}\n","import React from 'react'\nimport './App.css'\nimport { Route, Switch } from 'react-router-dom'\nimport Index from './pages/index'\nimport Meeting from './pages/meeting'\nimport { BrowserRouterHook } from './utils/use-router'\nfunction App () {\n  return (\n    <BrowserRouterHook>\n      <Switch>\n        <Route exact path=\"/meeting/:name\" component={Meeting}></Route>\n        <Route path=\"/\" component={Index}></Route>\n      </Switch>\n    </BrowserRouterHook>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport default createMuiTheme({\n  typography: {\n    fontFamily:\n      '-apple-system, BlinkMacSystemFont, \\\\\"Segoe UI\\\\\", \\\\\"Roboto\\\\\", \\\\\"Oxygen\\\\\", \\\\\"Ubuntu\\\\\", \\\\\"Cantarell\\\\\", \\\\\"Fira Sans\\\\\", \\\\\"Droid Sans\\\\\", \\\\\"Helvetica Neue\\\\\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n    color: '#333'\n  },\n\n  overrides: {\n    // MuiSnackbar: {\n    //   root: {\n    //     top: '100px',\n    //     position: 'absolute'\n    //   }\n    // },\n    MuiFormControl: {\n      root: {\n        margin: '0.3rem 0'\n      }\n    },\n    // MuiInputLabel: {\n    //   root: {\n    //     \"&$focused\": {\n    //       color: \"#44a2fc\"\n    //     }\n    //   },\n    // },\n    MuiInput: {\n      // root: {\n      //   '&$focused': {\n      //     color: \"#44a2fc\"\n      //   }\n      // },\n      underline: {\n        '&:before': {\n          borderBottom: '1px solid #EAEAEA'\n        },\n        '&:hover:not($disabled):not($focused):not($error):before': {\n          borderBottom: '2px solid #EAEAEA'\n        },\n        '&$focused': {\n          '&:after': {\n            borderBottom: '2px solid #44a2fc'\n          }\n        }\n        // root: {\n\n        // backgroundColor: '#44a2fc',\n        // borderBottom: '1px solid red'\n        // }\n      }\n    }\n  }\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { ContainerProvider } from './utils/container'\nimport { ThemeProvider } from '@material-ui/styles'\nimport THEME from './utils/theme'\n\nReactDOM.render(\n  <ThemeProvider theme={THEME}>\n    <ContainerProvider>\n      <App />\n    </ContainerProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}